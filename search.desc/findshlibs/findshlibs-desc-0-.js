searchState.loadedDescShard("findshlibs", 0, "<code>findshlibs</code>\nActual virtual memory address.\nVirtual memory bias.\nStop iteration.\nContinue iteration.\nA GNU build ID\nControl whether iteration over shared libraries should …\nA PDB GUID and age,\nThe PE timestamp and size\nA mapped segment in a shared library.\nThe associated segment type for this shared library.\nAn iterator over a shared library’s segments.\nA trait representing a shared library that is loaded in …\nThe associated shared library type for this segment.\nRepresents an ID for a shared library.\nStated virtual memory address.\nAn indicator if this platform is supported.\nThe <code>SharedLibrary</code> trait implementation for the target …\nA UUID (used on mac)\nReturns the address of where the library is loaded into …\nGet this segment’s actual virtual memory address.\nReturns the raw bytes of the shared library ID.\nGiven an AVMA within this shared library, convert it back …\nDoes this segment contain the given address?\nDoes this segment contain the given address?\nGet the debug-id of this shared library if available.\nGet the name of the debug file with this shared library if …\nFind all shared libraries in this process and invoke <code>f</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the code-id of this shared library if available.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is a code segment.\nReturns <code>true</code> if this is a segment loaded into memory.\nGet the length of this segment in memory (in bytes).\nReturns the size of the image.\nLinux-specific implementation of the <code>SharedLibrary</code> trait.\nGet this segment’s name.\nGet the name of this shared library.\nIterate over this shared library’s segments.\nReturns the address of where the library prefers to be …\nGet this segment’s stated virtual address of this …\nThe fallback implementation of the SharedLibrary trait …\nGet the bias of this shared library.\nA mapped segment in an ELF file.\nAn iterator of mapped segments in a shared library.\nA shared library on Linux.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn unsupported segment\nAn iterator over Mach-O segments.\nThe fallback implementation of the SharedLibrary trait.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")