searchState.loadedDescShard("libflate", 0, "A Rust implementation of DEFLATE algorithm and related …\nThe encoder and decoder of the DEFLATE format and …\n<code>Finish</code> and related types.\nThe encoder and decoder of the GZIP format.\nThe interface and implementations of LZ77 compression …\nImplementations that can handle non-blocking I/O.\nThe encoder and decoder of the ZLIB format.\nThe default size of a DEFLATE block.\nDEFLATE decoder.\nOptions for a DEFLATE encoder.\nDEFLATE encoder.\nReturns the mutable reference to the inner stream.\nReturns the mutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nSpecifies the hint of the size of a DEFLATE block.\nFlushes internal buffer and returns the inner stream.\nSpecifies to compress with fixed huffman codes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>Decoder</code>, returning the underlying reader.\nUnwraps the <code>Encoder</code>, returning the inner stream.\nMakes a new decoder instance.\nMakes a default instance.\nMakes a new encoder instance.\nDisables LZ77 compression.\nReturns the data that has been decoded but has not yet …\nSpecifies the LZ77 encoder used to compress input data.\nMakes a new encoder instance with specified options.\nA wrapper struct that completes the processing of the …\nA wrapper struct that completes the processing of the …\nThis trait allows to complete an I/O related processing.\n<code>Finish</code> is a type that represents a value which may have an …\nConverts from <code>Finish&lt;T, E&gt;</code> to <code>Result&lt;&amp;T, &amp;E&gt;</code>.\nCompletes the current processing and returns the result.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>AutoFinish</code> instance, returning the underlying …\nUnwraps this <code>AutoFinishUnchecked</code> instance, returning the …\nConverts from <code>Finish&lt;T, E&gt;</code> to <code>Result&lt;T, E&gt;</code>.\nMakes a new instance.\nMakes a new <code>AutoFinish</code> instance.\nMakes a new <code>AutoFinishUnchecked</code> instance.\nUnwraps the instance.\nAcorn RISCOS\nAmiga\nAtari TOS\nCompression levels defined by the GZIP format.\nCP/M\nGZIP decoder.\nOptions for a GZIP encoder.\nGZIP encoder.\nExtra field of a GZIP header.\nA sub field in the extra field of a GZIP header.\nCompressor used fastest algorithm.\nFAT filesystem (MS-DOS, OS/2, NT/Win32)\nGZIP Header.\nGZIP header builder.\nHPFS filesystem (OS/2, NT)\nMacintosh\nA decoder that decodes all members in a GZIP stream.\nNTFS filesystem (NT)\nOS type.\nQDOS\nCompressor used maximum compression, slowest algorithm.\nTOPS-20\nUndefined value in RFC-1952\nUnix\nNo information about compression method.\nUnknown\nVM/CMS\nVMS (or OpenVMS)\nZ-System\nReturns the mutable reference to the inner stream.\nReturns the mutable reference to the inner stream.\nReturns the mutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nSpecifies the hint of the size of a DEFLATE block.\nSets the comment.\nReturns the comment.\nReturns the compression level.\nData of the field.\nSets the extra field.\nReturns the extra field.\nSets the file name.\nReturns the file name.\nWrites the GZIP trailer and returns the inner stream.\nReturns the result header.\nSpecifies to compress with fixed huffman codes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the header of the GZIP stream.\nSets the GZIP header which will be written to the output …\nReturns the header of the GZIP stream.\nReturns the header of the current member in the GZIP …\nID of the field.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps the <code>Encoder</code>, returning the inner stream.\nUnwraps this <code>Decoder</code>, returning the underlying reader.\nUnwraps this <code>MultiDecoder</code>, returning the underlying reader.\nReturns <code>true</code> if the stream is probably ASCII text, <code>false</code> …\nReturns <code>true</code> if the header bytes is verified by CRC-16, …\nSets the modification time (UNIX timestamp).\nReturns the modification time (UNIX timestamp).\nMakes a new encoder instance.\nMakes a new builder instance.\nMakes a default instance.\nMakes a new decoder instance.\nMakes a new decoder instance.\nDisables LZ77 compression.\nSets the OS type.\nReturns the OS type.\nData of the extra field.\nIndicates the encoding data is a ASCII text.\nReturns the data that has been decoded but has not yet …\nSpecifies toe verify header bytes using CRC-16.\nSpecifies the LZ77 encoder used to compress input data.\nMakes a new encoder instance with specified options.\nBalanced between speed and size.\nBest compression.\nA LZ77 encoded data.\nCompression level.\nA <code>Lz77Encode</code> implementation used by default.\nType for constructing instances of <code>DefaultLz77Encoder</code>.\nBest speed.\nLiteral byte.\nLZ77 decoder.\nThe <code>Lz77Encode</code> trait defines the interface of LZ77 …\nMaximum backward distance of a pointer.\nMaximum length of sharable bytes in a pointer.\nMaximum size of a sliding window.\nA no compression implementation of <code>Lz77Encode</code> trait.\nNo compression.\nBackward pointer to shared data.\nThe <code>Sink</code> trait represents a consumer of LZ77 encoded data.\nReturns the buffer of <code>Lz77Decoder</code>.\nBuild the encoder with the builder state’s parameters.\nClears the buffer of <code>Lz77Decoder</code>.\nReturns the compression level of the encoder.\nConsumes a LZ77 encoded <code>Code</code>.\nDecodes a <code>Code</code>.\nEncodes a buffer and writes result LZ77 codes to <code>sink</code>.\nAppends the bytes read from <code>reader</code> to the buffer of …\nAppends the given bytes to the buffer of <code>Lz77Decoder</code>.\nFlushes the encoder, ensuring that all intermediately …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the maximum length of a pointer command this encoder …\nMakes a new encoder instance.\nCreate a builder with the default parameters for the …\nMakes a new encoder instance.\nMakes a new <code>Lz77Decoder</code> instance.\nReturns the window size of the encoder.\nSet the size of the sliding search window used during …\nMakes a new encoder instance with specified window size.\nDistance between current position and start position of …\nLength of the shared data. The values must be limited to …\nThe decoder of the DEFLATE format and algorithm.\nThe encoder and decoder of the GZIP format.\nThe encoder and decoder of the ZLIB format.\nDEFLATE decoder which supports non-blocking I/O.\nReturns the mutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>Decoder</code>, returning the underlying reader.\nMakes a new decoder instance.\nGZIP decoder which supports non-blocking I/O.\nReturns the mutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the argument unchanged.\nReturns the header of the GZIP stream.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>Decoder</code>, returning the underlying reader.\nMakes a new decoder instance.\nZLIB decoder which supports non-blocking I/O.\nReturns the mutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the argument unchanged.\nReturns the header of the ZLIB stream.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>Decoder</code>, returning the underlying reader.\nMakes a new decoder instance.\n256 bytes\n512 btyes\nCompression levels defined by the ZLIB format.\nZLIB decoder.\nCompressor used default algorithm.\nOptions for a ZLIB encoder.\nZLIB encoder.\nCompressor used fast algorithm.\nCompressor used fastest algorithm.\nzlib library specific parameter for defining behavior when …\nZLIB header.\n1 kilobyte\n16 kitobytes\n2 kilobytes\n32 kitobytes\n4 kitobytes\n8 kitobytes\nLZ77 Window sizes defined by the ZLIB format.\n<code>Z_NO_FLUSH</code> (default).\nCompressor used maximum compression, slowest algorithm.\n<code>Z_SYNC_FLUSH</code>.\nReturns the mutable reference to the inner stream.\nReturns the mutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nReturns the immutable reference to the inner stream.\nSpecifies the hint of the size of a DEFLATE block.\nReturns the compression level stored in the header.\nWrites the ZLIB trailer and returns the inner stream.\nSpecifies to compress with fixed huffman codes.\nSpecifies flush mode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from <code>u16</code> to Lz77WindowSize`.\nReturns the header of the ZLIB stream.\nReturns the header of the ZLIB stream.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps this <code>Decoder</code>, returning the underlying reader.\nUnwraps the <code>Encoder</code>, returning the inner stream.\nMakes a new decoder instance.\nMakes a default instance.\nMakes a new encoder instance.\nDisables LZ77 compression.\nConverts from <code>Lz77WindowSize</code> to <code>u16</code>.\nReturns the data that has been decoded but has not yet …\nReturns the LZ77 window size stored in the header.\nSpecifies the LZ77 encoder used to compress input data.\nMakes a new encoder instance with specified options.")